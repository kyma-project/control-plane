---
# Source: kcp/charts/component-reconcilers/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: component-reconcilers-base
  namespace:  reconciler
  labels:
    app: component-reconcilers-base
---
# Source: kcp/charts/component-reconcilers/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: component-reconcilers-busola-migrator
  namespace:  reconciler
  labels:
    app: component-reconcilers-busola-migrator
---
# Source: kcp/charts/component-reconcilers/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: component-reconcilers-connectivity-proxy
  namespace:  reconciler
  labels:
    app: component-reconcilers-connectivity-proxy
---
# Source: kcp/charts/component-reconcilers/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: component-reconcilers-istio-configuration
  namespace:  reconciler
  labels:
    app: component-reconcilers-istio-configuration
---
# Source: kcp/charts/component-reconcilers/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: component-reconcilers-ory
  namespace:  reconciler
  labels:
    app: component-reconcilers-ory
---
# Source: kcp/charts/component-reconcilers/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: component-reconcilers-rafter
  namespace:  reconciler
  labels:
    app: component-reconcilers-rafter
---
# Source: kcp/charts/component-reconcilers/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: component-reconcilers-eventing
  namespace:  reconciler
  labels:
    app: component-reconcilers-eventing
---
# Source: kcp/charts/component-reconcilers/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: component-reconcilers-serverless
  namespace:  reconciler
  labels:
    app: component-reconcilers-serverless
---
# Source: kcp/charts/mothership-reconciler/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mothership-reconciler
  namespace: reconciler
---
# Source: kcp/charts/mothership-reconciler/templates/mr-encryption-key-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: kcp-reconciler-key
  namespace: reconciler
data:
  reconciler.key: NWJjMTlkM2EyMDMyZmI4Nzk1Y2Q4NmUwOGI0NzNhMzUxNjMxNTA1ZDI1MjI5OTEyNjZiMWZiODVmODliYWQ1Zg==
---
# Source: kcp/charts/mothership-reconciler/templates/mr-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: kcp-mothership-reconciler
  namespace: reconciler
data:
  reconciler.yaml: |-
    ZGI6CiAgZHJpdmVyOiBwb3N0Z3JlcwogIGVuY3J5cHRpb246CiAgICBrZXlGaWxlOiAiL2VuY3J5cHRpb24vcmVjb25jaWxlci5rZXkiCiAgYmxvY2tRdWVyaWVzOiB0cnVlCiAgcG9zdGdyZXM6CiAgICBob3N0OiByZWNvbmNpbGVyLXBvc3RncmVzcWwKICAgIGRhdGFiYXNlOiByZWNvbmNpbGVyCiAgICBwb3J0OiA1NDMyCiAgICB1c2VyOiBwb3N0Z3JlcwogICAgcGFzc3dvcmQ6IHRlc3QKICAgIHVzZVNzbDogZmFsc2UKICAgIG1pZ3JhdGlvbnNEaXI6ICIuL2NvbmZpZ3MvZGIvcG9zdGdyZXMiCiAgc3FsaXRlOgogICAgZmlsZTogcmVjb25jaWxlci5kYgogICAgZGVwbG95U2NoZW1hOiB0cnVlCiAgICByZXNldERhdGFiYXNlOiBmYWxzZQptb3RoZXJzaGlwOgogIHNjaGVtZTogaHR0cAogIGhvc3Q6IHJlY29uY2lsZXItbW90aGVyc2hpcC1yZWNvbmNpbGVyCiAgcG9ydDogODAKICBzY2hlZHVsZXI6CiAgICByZWNvbmNpbGVyczoKICAgICAgYmFzZToKICAgICAgICB1cmw6IGh0dHA6Ly9iYXNlLXJlY29uY2lsZXI6ODA4MC92MS9ydW4KICAgICAgYnVzb2xhLW1pZ3JhdG9yOgogICAgICAgIHVybDogaHR0cDovL2J1c29sYS1taWdyYXRvci1yZWNvbmNpbGVyOjgwODAvdjEvcnVuCiAgICAgIGNvbm5lY3Rpdml0eS1wcm94eToKICAgICAgICB1cmw6IGh0dHA6Ly9jb25uZWN0aXZpdHktcHJveHktcmVjb25jaWxlcjo4MDgwL3YxL3J1bgogICAgICBpc3Rpby1jb25maWd1cmF0aW9uOgogICAgICAgIHVybDogaHR0cDovL2lzdGlvLWNvbmZpZ3VyYXRpb24tcmVjb25jaWxlcjo4MDgwL3YxL3J1bgogICAgICBvcnk6CiAgICAgICAgdXJsOiBodHRwOi8vb3J5LXJlY29uY2lsZXI6ODA4MC92MS9ydW4KICAgICAgcmFmdGVyOgogICAgICAgIHVybDogaHR0cDovL3JhZnRlci1yZWNvbmNpbGVyOjgwODAvdjEvcnVuCiAgICAgIGV2ZW50aW5nOgogICAgICAgIHVybDogaHR0cDovL2V2ZW50aW5nLXJlY29uY2lsZXI6ODA4MC92MS9ydW4KICAgICAgc2VydmVybGVzczoKICAgICAgICB1cmw6IGh0dHA6Ly9zZXJ2ZXJsZXNzLXJlY29uY2lsZXI6ODA4MC92MS9ydW4KICAgIHByZUNvbXBvbmVudHM6CiAgICAgIC0gY2x1c3Rlci1lc3NlbnRpYWxzCiAgICAgIC0gaXN0aW8tY29uZmlndXJhdGlvbgogICAgICAtIGNlcnRpZmljYXRlcw==
---
# Source: kcp/charts/postgresql/templates/init-db-config-map.yaml
# This file is not part of official PostgreSQL chart
apiVersion: v1
kind: ConfigMap
metadata:
  name: reconciler-postgresql-db-init
  namespace: reconciler
data:
  init-provisioner-db.sql: |
    CREATE DATABASE provisioner;
  init-broker-db.sql: |
    CREATE DATABASE broker;
  init-reconciler-db.sql: |
    CREATE DATABASE reconciler;
---
# Source: kcp/charts/component-reconcilers/templates/rbac.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: component-reconcilers-base
  namespace:  reconciler
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get"]
  - apiGroups: ["apps"]
    resources: ["deployments"]
    verbs: ["get","delete"]
---
# Source: kcp/charts/component-reconcilers/templates/rbac.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: component-reconcilers-busola-migrator
  namespace:  reconciler
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get"]
  - apiGroups: ["apps"]
    resources: ["deployments"]
    verbs: ["get","delete"]
---
# Source: kcp/charts/component-reconcilers/templates/rbac.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: component-reconcilers-connectivity-proxy
  namespace:  reconciler
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get"]
  - apiGroups: ["apps"]
    resources: ["deployments"]
    verbs: ["get","delete"]
---
# Source: kcp/charts/component-reconcilers/templates/rbac.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: component-reconcilers-istio-configuration
  namespace:  reconciler
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get"]
  - apiGroups: ["apps"]
    resources: ["deployments"]
    verbs: ["get","delete"]
---
# Source: kcp/charts/component-reconcilers/templates/rbac.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: component-reconcilers-ory
  namespace:  reconciler
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get"]
  - apiGroups: ["apps"]
    resources: ["deployments"]
    verbs: ["get","delete"]
---
# Source: kcp/charts/component-reconcilers/templates/rbac.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: component-reconcilers-rafter
  namespace:  reconciler
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get"]
  - apiGroups: ["apps"]
    resources: ["deployments"]
    verbs: ["get","delete"]
---
# Source: kcp/charts/component-reconcilers/templates/rbac.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: component-reconcilers-eventing
  namespace:  reconciler
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get"]
  - apiGroups: ["apps"]
    resources: ["deployments"]
    verbs: ["get","delete"]
---
# Source: kcp/charts/component-reconcilers/templates/rbac.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: component-reconcilers-serverless
  namespace:  reconciler
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get"]
  - apiGroups: ["apps"]
    resources: ["deployments"]
    verbs: ["get","delete"]
---
# Source: kcp/charts/component-reconcilers/templates/rbac.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: component-reconcilers-base
  namespace:  reconciler
subjects:
  - kind: ServiceAccount
    name: component-reconcilers-base
    namespace:  reconciler
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: component-reconcilers-base
---
# Source: kcp/charts/component-reconcilers/templates/rbac.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: component-reconcilers-busola-migrator
  namespace:  reconciler
subjects:
  - kind: ServiceAccount
    name: component-reconcilers-busola-migrator
    namespace:  reconciler
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: component-reconcilers-busola-migrator
---
# Source: kcp/charts/component-reconcilers/templates/rbac.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: component-reconcilers-connectivity-proxy
  namespace:  reconciler
subjects:
  - kind: ServiceAccount
    name: component-reconcilers-connectivity-proxy
    namespace:  reconciler
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: component-reconcilers-connectivity-proxy
---
# Source: kcp/charts/component-reconcilers/templates/rbac.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: component-reconcilers-istio-configuration
  namespace:  reconciler
subjects:
  - kind: ServiceAccount
    name: component-reconcilers-istio-configuration
    namespace:  reconciler
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: component-reconcilers-istio-configuration
---
# Source: kcp/charts/component-reconcilers/templates/rbac.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: component-reconcilers-ory
  namespace:  reconciler
subjects:
  - kind: ServiceAccount
    name: component-reconcilers-ory
    namespace:  reconciler
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: component-reconcilers-ory
---
# Source: kcp/charts/component-reconcilers/templates/rbac.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: component-reconcilers-rafter
  namespace:  reconciler
subjects:
  - kind: ServiceAccount
    name: component-reconcilers-rafter
    namespace:  reconciler
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: component-reconcilers-rafter
---
# Source: kcp/charts/component-reconcilers/templates/rbac.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: component-reconcilers-eventing
  namespace:  reconciler
subjects:
  - kind: ServiceAccount
    name: component-reconcilers-eventing
    namespace:  reconciler
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: component-reconcilers-eventing
---
# Source: kcp/charts/component-reconcilers/templates/rbac.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: component-reconcilers-serverless
  namespace:  reconciler
subjects:
  - kind: ServiceAccount
    name: component-reconcilers-serverless
    namespace:  reconciler
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: component-reconcilers-serverless
---
# Source: kcp/charts/component-reconcilers/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: base-reconciler
  namespace: reconciler
  labels:
    kyma-project.io/component-reconciler: ""
    component: base
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    kyma-project.io/component-reconciler: ""
    component: base
---
# Source: kcp/charts/component-reconcilers/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: busola-migrator-reconciler
  namespace: reconciler
  labels:
    kyma-project.io/component-reconciler: ""
    component: busola-migrator
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    kyma-project.io/component-reconciler: ""
    component: busola-migrator
---
# Source: kcp/charts/component-reconcilers/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: connectivity-proxy-reconciler
  namespace: reconciler
  labels:
    kyma-project.io/component-reconciler: ""
    component: connectivity-proxy
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    kyma-project.io/component-reconciler: ""
    component: connectivity-proxy
---
# Source: kcp/charts/component-reconcilers/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: istio-configuration-reconciler
  namespace: reconciler
  labels:
    kyma-project.io/component-reconciler: ""
    component: istio-configuration
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    kyma-project.io/component-reconciler: ""
    component: istio-configuration
---
# Source: kcp/charts/component-reconcilers/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ory-reconciler
  namespace: reconciler
  labels:
    kyma-project.io/component-reconciler: ""
    component: ory
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    kyma-project.io/component-reconciler: ""
    component: ory
---
# Source: kcp/charts/component-reconcilers/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: rafter-reconciler
  namespace: reconciler
  labels:
    kyma-project.io/component-reconciler: ""
    component: rafter
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    kyma-project.io/component-reconciler: ""
    component: rafter
---
# Source: kcp/charts/component-reconcilers/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: eventing-reconciler
  namespace: reconciler
  labels:
    kyma-project.io/component-reconciler: ""
    component: eventing
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    kyma-project.io/component-reconciler: ""
    component: eventing
---
# Source: kcp/charts/component-reconcilers/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: serverless-reconciler
  namespace: reconciler
  labels:
    kyma-project.io/component-reconciler: ""
    component: serverless
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    kyma-project.io/component-reconciler: ""
    component: serverless
---
# Source: kcp/charts/mothership-reconciler/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: reconciler-mothership-reconciler
  namespace: reconciler
  labels:
    helm.sh/chart: mothership-reconciler-0.1.0
    app.kubernetes.io/name: mothership-reconciler
    app.kubernetes.io/instance: reconciler
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: mothership-reconciler
    app.kubernetes.io/instance: reconciler
---
# Source: kcp/charts/postgresql/templates/svc-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: reconciler-postgresql-headless
  namespace: reconciler
  labels:
    app: postgresql
    chart: postgresql-5.3.11
    release: "reconciler"
    heritage: "Helm"
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - name: postgresql
    port: 5432
    targetPort: postgresql
  selector:
    app: postgresql
    release: "reconciler"
---
# Source: kcp/charts/postgresql/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: reconciler-postgresql
  namespace: reconciler
  labels:
    app: postgresql
    chart: postgresql-5.3.11
    release: "reconciler"
    heritage: "Helm"
spec:
  type: ClusterIP
  ports:
  - name: postgresql
    port: 5432
    targetPort: postgresql
  selector:
    app: postgresql
    release: "reconciler"
    role: master
---
# Source: kcp/charts/component-reconcilers/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    kyma-project.io/component-reconciler: ""
    component: base
  name: base-reconciler
  namespace: reconciler
spec:
  selector:
    matchLabels:
      kyma-project.io/component-reconciler: ""
      component: base
  replicas: 1
  template:
    metadata:
      labels:
        kyma-project.io/component-reconciler: ""
        component: base
    spec:
      serviceAccountName: component-reconcilers-base
      containers:
      - image: "eu.gcr.io/kyma-project/incubator/reconciler/component:0853295a"
        imagePullPolicy: IfNotPresent
        args:
          - reconciler
          - start
          - base
          - --workspace=/tmp/reconciler
          - --verbose
        name: reconciler
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        resources: {}
        volumeMounts:
        - mountPath: /tmp
          name: workspace
      securityContext:
        runAsUser: 2000
      volumes:
      - emptyDir: {}
        name: workspace
---
# Source: kcp/charts/component-reconcilers/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    kyma-project.io/component-reconciler: ""
    component: busola-migrator
  name: busola-migrator-reconciler
  namespace: reconciler
spec:
  selector:
    matchLabels:
      kyma-project.io/component-reconciler: ""
      component: busola-migrator
  replicas: 1
  template:
    metadata:
      labels:
        kyma-project.io/component-reconciler: ""
        component: busola-migrator
    spec:
      serviceAccountName: component-reconcilers-busola-migrator
      containers:
      - image: "eu.gcr.io/kyma-project/incubator/reconciler/component:0853295a"
        imagePullPolicy: IfNotPresent
        args:
          - reconciler
          - start
          - busola-migrator
          - --workspace=/tmp/reconciler
          - --verbose
        name: reconciler
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        resources: {}
        volumeMounts:
        - mountPath: /tmp
          name: workspace
      securityContext:
        runAsUser: 2000
      volumes:
      - emptyDir: {}
        name: workspace
---
# Source: kcp/charts/component-reconcilers/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    kyma-project.io/component-reconciler: ""
    component: connectivity-proxy
  name: connectivity-proxy-reconciler
  namespace: reconciler
spec:
  selector:
    matchLabels:
      kyma-project.io/component-reconciler: ""
      component: connectivity-proxy
  replicas: 1
  template:
    metadata:
      labels:
        kyma-project.io/component-reconciler: ""
        component: connectivity-proxy
    spec:
      serviceAccountName: component-reconcilers-connectivity-proxy
      containers:
      - image: "eu.gcr.io/kyma-project/incubator/reconciler/component:0853295a"
        imagePullPolicy: IfNotPresent
        args:
          - reconciler
          - start
          - connectivity-proxy
          - --workspace=/tmp/reconciler
          - --verbose
        name: reconciler
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        resources: {}
        volumeMounts:
        - mountPath: /tmp
          name: workspace
      securityContext:
        runAsUser: 2000
      volumes:
      - emptyDir: {}
        name: workspace
---
# Source: kcp/charts/component-reconcilers/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    kyma-project.io/component-reconciler: ""
    component: istio-configuration
  name: istio-configuration-reconciler
  namespace: reconciler
spec:
  selector:
    matchLabels:
      kyma-project.io/component-reconciler: ""
      component: istio-configuration
  replicas: 1
  template:
    metadata:
      labels:
        kyma-project.io/component-reconciler: ""
        component: istio-configuration
    spec:
      serviceAccountName: component-reconcilers-istio-configuration
      containers:
      - image: "eu.gcr.io/kyma-project/incubator/reconciler/component:0853295a"
        imagePullPolicy: IfNotPresent
        args:
          - reconciler
          - start
          - istio-configuration
          - --workspace=/tmp/reconciler
          - --verbose
        name: reconciler
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        resources: {}
        volumeMounts:
        - mountPath: /tmp
          name: workspace
      securityContext:
        runAsUser: 2000
      volumes:
      - emptyDir: {}
        name: workspace
---
# Source: kcp/charts/component-reconcilers/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    kyma-project.io/component-reconciler: ""
    component: ory
  name: ory-reconciler
  namespace: reconciler
spec:
  selector:
    matchLabels:
      kyma-project.io/component-reconciler: ""
      component: ory
  replicas: 1
  template:
    metadata:
      labels:
        kyma-project.io/component-reconciler: ""
        component: ory
    spec:
      serviceAccountName: component-reconcilers-ory
      containers:
      - image: "eu.gcr.io/kyma-project/incubator/reconciler/component:0853295a"
        imagePullPolicy: IfNotPresent
        args:
          - reconciler
          - start
          - ory
          - --workspace=/tmp/reconciler
          - --verbose
        name: reconciler
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        resources: {}
        volumeMounts:
        - mountPath: /tmp
          name: workspace
      securityContext:
        runAsUser: 2000
      volumes:
      - emptyDir: {}
        name: workspace
---
# Source: kcp/charts/component-reconcilers/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    kyma-project.io/component-reconciler: ""
    component: rafter
  name: rafter-reconciler
  namespace: reconciler
spec:
  selector:
    matchLabels:
      kyma-project.io/component-reconciler: ""
      component: rafter
  replicas: 1
  template:
    metadata:
      labels:
        kyma-project.io/component-reconciler: ""
        component: rafter
    spec:
      serviceAccountName: component-reconcilers-rafter
      containers:
      - image: "eu.gcr.io/kyma-project/incubator/reconciler/component:0853295a"
        imagePullPolicy: IfNotPresent
        args:
          - reconciler
          - start
          - rafter
          - --workspace=/tmp/reconciler
          - --verbose
        name: reconciler
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        resources: {}
        volumeMounts:
        - mountPath: /tmp
          name: workspace
      securityContext:
        runAsUser: 2000
      volumes:
      - emptyDir: {}
        name: workspace
---
# Source: kcp/charts/component-reconcilers/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    kyma-project.io/component-reconciler: ""
    component: eventing
  name: eventing-reconciler
  namespace: reconciler
spec:
  selector:
    matchLabels:
      kyma-project.io/component-reconciler: ""
      component: eventing
  replicas: 1
  template:
    metadata:
      labels:
        kyma-project.io/component-reconciler: ""
        component: eventing
    spec:
      serviceAccountName: component-reconcilers-eventing
      containers:
      - image: "eu.gcr.io/kyma-project/incubator/reconciler/component:0853295a"
        imagePullPolicy: IfNotPresent
        args:
          - reconciler
          - start
          - eventing
          - --workspace=/tmp/reconciler
          - --verbose
        name: reconciler
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        resources: {}
        volumeMounts:
        - mountPath: /tmp
          name: workspace
      securityContext:
        runAsUser: 2000
      volumes:
      - emptyDir: {}
        name: workspace
---
# Source: kcp/charts/component-reconcilers/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    kyma-project.io/component-reconciler: ""
    component: serverless
  name: serverless-reconciler
  namespace: reconciler
spec:
  selector:
    matchLabels:
      kyma-project.io/component-reconciler: ""
      component: serverless
  replicas: 1
  template:
    metadata:
      labels:
        kyma-project.io/component-reconciler: ""
        component: serverless
    spec:
      serviceAccountName: component-reconcilers-serverless
      containers:
      - image: "eu.gcr.io/kyma-project/incubator/reconciler/component:0853295a"
        imagePullPolicy: IfNotPresent
        args:
          - reconciler
          - start
          - serverless
          - --workspace=/tmp/reconciler
          - --verbose
        name: reconciler
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        resources: {}
        volumeMounts:
        - mountPath: /tmp
          name: workspace
      securityContext:
        runAsUser: 2000
      volumes:
      - emptyDir: {}
        name: workspace
---
# Source: kcp/charts/mothership-reconciler/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    helm.sh/chart: mothership-reconciler-0.1.0
    app.kubernetes.io/name: mothership-reconciler
    app.kubernetes.io/instance: reconciler
    app.kubernetes.io/managed-by: Helm
  name: mothership-reconciler
  namespace: reconciler
spec:
  selector:
    matchLabels:
      helm.sh/chart: mothership-reconciler-0.1.0
      app.kubernetes.io/name: mothership-reconciler
      app.kubernetes.io/instance: reconciler
      app.kubernetes.io/managed-by: Helm
  replicas: 1
  template:
    metadata:
      labels:
        helm.sh/chart: mothership-reconciler-0.1.0
        app.kubernetes.io/name: mothership-reconciler
        app.kubernetes.io/instance: reconciler
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: mothership-reconciler
      securityContext:
              runAsUser: 2000
      containers:
      - image: "eu.gcr.io/kyma-project/incubator/reconciler/mothership:0853295a"
        imagePullPolicy: IfNotPresent
        args:
          - mothership
          - mothership
          - start
          - --config=mothership-configuration/reconciler.yaml
          - --migrate-database
          - --verbose
        name: mothership-reconciler
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        resources:
                  null
        volumeMounts:
        - name: encryption-key
          mountPath: "/encryption"
        - name: mothership-reconciler-configuration
          mountPath: "/mothership-configuration"
      volumes:
      - name: encryption-key
        secret:
          secretName: kcp-reconciler-key
      - name: mothership-reconciler-configuration
        secret:
          secretName: kcp-mothership-reconciler
---
# Source: kcp/charts/postgresql/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: reconciler-postgresql
  namespace: reconciler
  labels:
    app: postgresql
    chart: postgresql-5.3.11
    release: "reconciler"
    heritage: "Helm"
spec:
  serviceName: reconciler-postgresql-headless
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: postgresql
      release: "reconciler"
      role: master
  template:
    metadata:
      name: reconciler-postgresql
      labels:
        app: postgresql
        chart: postgresql-5.3.11
        release: "reconciler"
        heritage: "Helm"
        role: master
    spec:      
      securityContext:
        fsGroup: 1001
      containers:
      - name: reconciler-postgresql
        image: docker.io/bitnami/postgresql:11.4.0-debian-9-r12
        imagePullPolicy: "IfNotPresent"
        resources:
          requests:
            cpu: 250m
            memory: 256Mi
        securityContext:
          runAsUser: 1001
        env:
        - name: BITNAMI_DEBUG
          value: "false"
        - name: POSTGRESQL_PORT_NUMBER
          value: "5432"
        - name: PGDATA
          value: "/bitnami/postgresql/data"
        - name: POSTGRES_USER
          value: "postgres"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: reconciler-postgresql
              key: postgresql-password
        ports:
        - name: postgresql
          containerPort: 5432
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - exec pg_isready -U "postgres" -h 127.0.0.1 -p 5432
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - |
              pg_isready -U "postgres" -h 127.0.0.1 -p 5432
              [ -f /opt/bitnami/postgresql/tmp/.initialized ]
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        volumeMounts:
        - name: custom-init-scripts
          mountPath: /docker-entrypoint-initdb.d/
      volumes:
      - name: custom-init-scripts
        configMap:
          name: reconciler-postgresql-db-init
      - name: data
        emptyDir: {}
---
# Source: kcp/charts/postgresql/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: reconciler-postgresql
  namespace: reconciler
  labels:
    app: postgresql
    chart: postgresql-5.3.11
    release: "reconciler"
    heritage: "Helm"
  annotations:
    "helm.sh/hook": "pre-install" # Modified
    "helm.sh/hook-delete-policy": "before-hook-creation" # Modified
type: Opaque
data:
  postgresql-provisioner-db-name: "cHJvdmlzaW9uZXI=" # Modified
  postgresql-provisioner-username: "cG9zdGdyZXM=" # Modified
  postgresql-provisioner-password: "dGVzdA==" # TODO: Embedded db doesn't support separate accounts
  postgresql-broker-db-name: "YnJva2Vy" # Modified
  postgresql-broker-username: "cG9zdGdyZXM=" # Modified
  postgresql-broker-password: "dGVzdA==" # TODO: Embedded db doesn't support separate accounts
  postgresql-reconciler-db-name: "cmVjb25jaWxlcg==" # Modified
  postgresql-reconciler-username: "cG9zdGdyZXM=" # Modified
  postgresql-reconciler-password: "dGVzdA==" # TODO: Embedded db doesn't support separate accounts
  postgresql-serviceName: "cmVjb25jaWxlci1wb3N0Z3Jlc3Fs" # Modified
  postgresql-servicePort: "NTQzMg==" # Modified
  postgresql-sslMode: "ZGlzYWJsZQ==" # Modified
  postgresql-username: "cG9zdGdyZXM=" #TODO remove after migration to separate user will be done
  postgresql-password: "dGVzdA==" #TODO remove after migration to separate user will be done
  postgresql-provisionerDatabaseName: "cHJvdmlzaW9uZXI=" #TODO remove after migration to separate user will be done
  postgresql-brokerDatabaseName: "YnJva2Vy" #TODO remove after migration to separate user will be done
---
# Source: kcp/templates/migrator-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
    name: kcp-migration-broker
    labels:
        app: kcp
        release: reconciler
    annotations:
        "helm.sh/hook": post-install,post-upgrade
        "helm.sh/hook-weight": "1"
        "helm.sh/hook-delete-policy": before-hook-creation
spec:
    template:
        metadata:
            labels:
                app: kcp
                release: reconciler
            
        spec:
            restartPolicy: Never
            shareProcessNamespace: true
            containers:
                
                - name: migrator
                  image: eu.gcr.io/kyma-project/control-plane/schema-migrator:PR-1009
                  imagePullPolicy: IfNotPresent
                  env:
                      - name: DB_USER
                        valueFrom:
                            secretKeyRef:
                                name: kcp-postgresql
                                key: postgresql-broker-username
                      - name: DB_PASSWORD
                        valueFrom:
                            secretKeyRef:
                                name: kcp-postgresql
                                key: postgresql-broker-password
                      - name: DB_HOST
                        valueFrom:
                            secretKeyRef:
                                name: kcp-postgresql
                                key: postgresql-serviceName
                      - name: DB_PORT
                        valueFrom:
                            secretKeyRef:
                                name: kcp-postgresql
                                key: postgresql-servicePort
                      - name: DB_NAME
                        valueFrom:
                          secretKeyRef:
                            name: kcp-postgresql
                            key: postgresql-broker-db-name
                      - name: DB_SSL
                        valueFrom:
                          secretKeyRef:
                            name: kcp-postgresql
                            key: postgresql-sslMode
                      - name: MIGRATION_PATH
                        value: "kyma-environment-broker"
                      - name: DIRECTION
                        value: "up"

                  command:
                    - "/bin/bash"
                  args:
                    - "-c"
                    
                    # There is no Cloud SQL Proxy so there is no need to kill it
                    - "sleep 20; ./run.sh; exit_code=$?; echo '# QUITTING ISTIO SIDECAR #'; curl -XPOST http://127.0.0.1:15020/quitquitquit; sleep 5; exit $exit_code;"
---
# Source: kcp/templates/migrator-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
    name: kcp-migration-provisioner
    labels:
        app: kcp
        release: reconciler
    annotations:
        "helm.sh/hook": post-install,post-upgrade
        "helm.sh/hook-weight": "2"
        "helm.sh/hook-delete-policy": before-hook-creation
spec:
    template:
        metadata:
            labels:
                app: kcp
                release: reconciler
            
        spec:
            restartPolicy: Never
            shareProcessNamespace: true
            containers:
                
                - name: migrator
                  image: eu.gcr.io/kyma-project/control-plane/schema-migrator:PR-1009
                  imagePullPolicy: IfNotPresent
                  env:
                      - name: DB_USER
                        valueFrom:
                            secretKeyRef:
                                name: kcp-postgresql
                                key: postgresql-provisioner-username
                      - name: DB_PASSWORD
                        valueFrom:
                            secretKeyRef:
                                name: kcp-postgresql
                                key: postgresql-provisioner-password
                      - name: DB_HOST
                        valueFrom:
                            secretKeyRef:
                                name: kcp-postgresql
                                key: postgresql-serviceName
                      - name: DB_PORT
                        valueFrom:
                            secretKeyRef:
                                name: kcp-postgresql
                                key: postgresql-servicePort
                      - name: DB_NAME
                        valueFrom:
                          secretKeyRef:
                            name: kcp-postgresql
                            key: postgresql-provisioner-db-name
                      - name: DB_SSL
                        valueFrom:
                          secretKeyRef:
                            name: kcp-postgresql
                            key: postgresql-sslMode
                      - name: MIGRATION_PATH
                        value: "provisioner"
                      - name: DIRECTION
                        value: "up"

                  command:
                    - "/bin/bash"
                  args:
                    - "-c"
                    
                    # There is no Cloud SQL Proxy so there is no need to kill it
                    - "sleep 20; ./run.sh; exit_code=$?; echo '# QUITTING ISTIO SIDECAR #'; curl -XPOST http://127.0.0.1:15020/quitquitquit; sleep 5; exit $exit_code;"
