{{- if .Values.migratorJobs.enabled -}}
apiVersion: batch/v1
kind: Job
metadata:
    name: kcp-migration-broker
    labels:
        app: {{ .Chart.Name }}
        release: {{ .Release.Name }}
    annotations:
        "helm.sh/hook": post-install,post-upgrade
        "helm.sh/hook-weight": "1"
        "helm.sh/hook-delete-policy": before-hook-creation
spec:
    template:
        metadata:
            labels:
                app: {{ .Chart.Name }}
                release: {{ .Release.Name }}
            {{if eq .Values.global.database.embedded.enabled false}}
            annotations:
                sidecar.istio.io/inject: "false"
            {{end}}
        spec:
            restartPolicy: Never
            shareProcessNamespace: true
            containers:
                {{if eq .Values.global.database.embedded.enabled false}}
                - name: cloudsql-proxy
                  image: {{ .Values.global.images.cloudsql_proxy_image }}
                  command: [ "/cloud_sql_proxy",
                             "-instances={{ .Values.global.database.managedGCP.instanceConnectionName }}=tcp:5432",
                             "-credential_file=/secrets/cloudsql-instance-credentials/credentials.json" ]
                  volumeMounts:
                      - name: cloudsql-instance-credentials
                        mountPath: /secrets/cloudsql-instance-credentials
                        readOnly: true
                {{end}}
                - name: migrator
                  image: {{ .Values.global.images.containerRegistry.path }}/{{ .Values.global.images.schema_migrator.dir }}schema-migrator:{{ .Values.global.images.schema_migrator.version }}
                  imagePullPolicy: IfNotPresent
                  command: 
                    - /bin/program
                  env:
                      {{if eq .Values.global.database.embedded.enabled true}}
                      - name: DATABASE_EMBEDDED
                        value: "true"
                      {{end}}
                      {{if eq .Values.global.database.embedded.enabled false}}
                      - name: DATABASE_EMBEDDED
                        value: "false"
                      {{end}}
                      - name: DB_USER
                        valueFrom:
                            secretKeyRef:
                                name: kcp-postgresql
                                key: postgresql-broker-username
                      - name: DB_PASSWORD
                        valueFrom:
                            secretKeyRef:
                                name: kcp-postgresql
                                key: postgresql-broker-password
                      - name: DB_HOST
                        valueFrom:
                            secretKeyRef:
                                name: kcp-postgresql
                                key: postgresql-serviceName
                      - name: DB_PORT
                        valueFrom:
                            secretKeyRef:
                                name: kcp-postgresql
                                key: postgresql-servicePort
                      - name: DB_NAME
                        valueFrom:
                          secretKeyRef:
                            name: kcp-postgresql
                            key: postgresql-broker-db-name
                      - name: DB_SSL
                        valueFrom:
                          secretKeyRef:
                            name: kcp-postgresql
                            key: postgresql-sslMode
                      - name: MIGRATION_PATH
                        value: "kyma-environment-broker"
                      - name: DIRECTION
                        value: "up"
            {{if eq .Values.global.database.embedded.enabled false}}
            volumes:
              - name: cloudsql-instance-credentials
                secret:
                  secretName: cloudsql-instance-credentials
            {{end}}
---
apiVersion: batch/v1
kind: Job
metadata:
    name: kcp-migration-provisioner
    labels:
        app: {{ .Chart.Name }}
        release: {{ .Release.Name }}
    annotations:
        "helm.sh/hook": post-install,post-upgrade
        "helm.sh/hook-weight": "2"
        "helm.sh/hook-delete-policy": before-hook-creation
spec:
    template:
        metadata:
            labels:
                app: {{ .Chart.Name }}
                release: {{ .Release.Name }}
            {{if eq .Values.global.database.embedded.enabled false}}
            annotations:
                sidecar.istio.io/inject: "false"
            {{end}}
        spec:
            restartPolicy: Never
            shareProcessNamespace: true
            containers:
                {{if eq .Values.global.database.embedded.enabled false}}
                - name: cloudsql-proxy
                  image: {{ .Values.global.images.cloudsql_proxy_image }}
                  command: [ "/cloud_sql_proxy",
                             "-instances={{ .Values.global.database.managedGCP.instanceConnectionName }}=tcp:5432",
                             "-credential_file=/secrets/cloudsql-instance-credentials/credentials.json" ]
                  volumeMounts:
                      - name: cloudsql-instance-credentials
                        mountPath: /secrets/cloudsql-instance-credentials
                        readOnly: true
                {{end}}
                - name: migrator
                  image: {{ .Values.global.images.containerRegistry.path }}/{{ .Values.global.images.schema_migrator.dir }}schema-migrator:{{ .Values.global.images.schema_migrator.version }}
                  imagePullPolicy: IfNotPresent
                  command:
                    - /bin/program
                  env:
                      {{if eq .Values.global.database.embedded.enabled true}}
                      - name: DATABASE_EMBEDDED
                        value: "true"
                      {{end}}
                      {{if eq .Values.global.database.embedded.enabled false}}
                      - name: DATABASE_EMBEDDED
                        value: "false"
                      {{end}}
                      - name: DB_USER
                        valueFrom:
                            secretKeyRef:
                                name: kcp-postgresql
                                key: postgresql-provisioner-username
                      - name: DB_PASSWORD
                        valueFrom:
                            secretKeyRef:
                                name: kcp-postgresql
                                key: postgresql-provisioner-password
                      - name: DB_HOST
                        valueFrom:
                            secretKeyRef:
                                name: kcp-postgresql
                                key: postgresql-serviceName
                      - name: DB_PORT
                        valueFrom:
                            secretKeyRef:
                                name: kcp-postgresql
                                key: postgresql-servicePort
                      - name: DB_NAME
                        valueFrom:
                          secretKeyRef:
                            name: kcp-postgresql
                            key: postgresql-provisioner-db-name
                      - name: DB_SSL
                        valueFrom:
                          secretKeyRef:
                            name: kcp-postgresql
                            key: postgresql-sslMode
                      - name: MIGRATION_PATH
                        value: "provisioner"
                      - name: DIRECTION
                        value: "up"
            {{if eq .Values.global.database.embedded.enabled false}}
            volumes:
              - name: cloudsql-instance-credentials
                secret:
                  secretName: cloudsql-instance-credentials
            {{end}}
{{ end }}
