apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kyma-env-broker.fullname" . }}
  labels:
{{ include "kyma-env-broker.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.deployment.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "kyma-env-broker.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  strategy:
    {{- toYaml .Values.deployment.strategy | nindent 4 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "kyma-env-broker.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/app-config.yaml") . | sha256sum }}
    spec:
      {{ if .Values.global.isLocalEnv }}
      # HostAliases are used by Pod to resolve kyma.local domain
      hostAliases:
        - ip: {{ .Values.global.minikubeIP }}
          hostnames:
            # Used for calls to Director
            - "{{ .Values.global.compass.tls.secure.oauth.host }}.{{ .Values.global.compass.domain | default .Values.global.ingress.domainName }}"
            # Used for calls for oauth token
            - "{{ .Values.global.oauth2.host }}.{{ .Values.global.compass.domain | default .Values.global.ingress.domainName }}"
      {{ end }}
      serviceAccountName: {{ include "kyma-env-broker.fullname" . }}
    {{- with .Values.deployment.securityContext }}
      securityContext:
        {{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      nodeSelector:
        {{- toYaml .Values.deployment.nodeSelector | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.global.images.containerRegistry.path }}/{{ .Values.global.images.kyma_environment_broker.dir }}kyma-environment-broker:{{ .Values.global.images.kyma_environment_broker.version }}"
          imagePullPolicy: {{ .Values.deployment.image.pullPolicy }}
          env:
            - name: APP_DISABLE_PROCESS_OPERATIONS_IN_PROGRESS
              value: "{{ .Values.disableProcessOperationsInProgress }}"
            - name: APP_BROKER_ENABLE_PLANS
              value: "{{ .Values.enablePlans }}"
            - name: APP_BROKER_ONLY_SINGLE_TRIAL_PER_GA
              value: "{{ .Values.onlySingleTrialPerGA }}"
            - name: APP_BROKER_URL
              value: {{ .Values.host }}.{{ .Values.global.ingress.domainName }}
            - name: APP_BROKER_ENABLE_KUBECONFIG_URL_LABEL
              value: "{{ .Values.enableKubeconfigURLLabel }}"
            - name: APP_OPERATION_TIMEOUT
              value: "{{ .Values.broker.operationTimeout }}"
            - name: APP_PROVISIONER_URL
              value: "{{ .Values.provisioner.URL }}"
            - name: APP_PROVISIONER_PROVISIONING_TIMEOUT
              value: "{{ .Values.provisioner.provisioningTimeout }}"
            - name: APP_PROVISIONER_DEPROVISIONING_TIMEOUT
              value: "{{ .Values.provisioner.deprovisioningTimeout }}"
            - name: APP_PROVISIONER_DEFAULT_GARDENER_SHOOT_PURPOSE
              value: "{{ .Values.gardener.defaultShootPurpose }}"
            - name: APP_PROVISIONER_DEFAULT_TRIAL_PROVIDER
              value: "{{ .Values.gardener.defaultTrialProvider }}"
            - name: APP_PORT
              value: "{{ .Values.broker.port }}"
            - name: APP_STATUS_PORT
              value: "{{ .Values.broker.statusPort }}"
            - name: APP_DIRECTOR_DEFAULT_TENANT
              value: "{{ .Values.global.defaultTenant }}"
            - name: APP_DIRECTOR_URL
              value: "https://{{ .Values.global.compass.tls.secure.oauth.host }}.{{ .Values.global.compass.domain | default .Values.global.ingress.domainName }}/director/graphql"
            - name: APP_DIRECTOR_OAUTH_TOKEN_URL
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.global.kyma_environment_broker.secrets.integrationSystemCredentials.name }}"
                  key: tokens_endpoint
                  optional: true
            - name: APP_DIRECTOR_OAUTH_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.global.kyma_environment_broker.secrets.integrationSystemCredentials.name }}"
                  key: client_id
                  optional: true
            - name: APP_DIRECTOR_OAUTH_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.global.kyma_environment_broker.secrets.integrationSystemCredentials.name }}"
                  key: client_secret
                  optional: true
            - name: APP_DIRECTOR_OAUTH_SCOPE
              value: "{{ .Values.director.scope }}"
            - name: APP_XSUAA_DISABLED
              value: "{{ .Values.xsuaa.disabled }}"
            - name: APP_IAS_URL
              value: "{{ .Values.ias.url }}"
            - name: APP_IAS_USER_ID
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.ias.secretName }}"
                  key: id
            - name: APP_IAS_USER_SECRET
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.ias.secretName }}"
                  key: secret
            - name: APP_IAS_IDENTITY_PROVIDER
              value: "{{ .Values.ias.identityProvider }}"
            - name: APP_IAS_DISABLED
              value: "{{ .Values.ias.disabled }}"
            - name: APP_IAS_TLS_RENEGOTIATION_ENABLE
              value: "{{ .Values.ias.tlsRenegotiationEnable }}"
            - name: APP_IAS_TLS_SKIP_CERT_VERIFICATION
              value: "{{ .Values.ias.tlsRenegotiationEnable }}"
            - name: APP_EDP_AUTH_URL
              value: "{{ .Values.edp.authURL }}"
            - name: APP_EDP_ADMIN_URL
              value: "{{ .Values.edp.adminURL }}"
            - name: APP_EDP_NAMESPACE
              value: "{{ .Values.edp.namespace }}"
            - name: APP_EDP_ENVIRONMENT
              value: "{{ .Values.edp.environment }}"
            - name: APP_EDP_REQUIRED
              value: "{{ .Values.edp.required }}"
            - name: APP_EDP_DISABLED
              value: "{{ .Values.edp.disabled }}"
            - name: APP_EDP_SECRET
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.edp.secretName }}"
                  key: secret
            - name: APP_EMS_DISABLED
              value: "{{ .Values.ems.disabled }}"
            - name: APP_CONNECTIVITY_DISABLED
              value: "{{ .Values.connectivity.disabled }}"
            - name: APP_EMS_SKIP_DEPROVISION_AZURE_EVENTING_AT_UPGRADE
              value: "{{ .Values.ems.skipDeprovisionAzureEventingAtUpgrade }}"
            - name: APP_DATABASE_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.global.database.managedGCP.encryptionSecretName }}"
                  key: secretKey
                  optional: true
            - name: APP_DATABASE_USER
              valueFrom:
                secretKeyRef:
                  name: kcp-postgresql
                  key: postgresql-broker-username
            - name: APP_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: kcp-postgresql
                  key: postgresql-broker-password
            - name: APP_DATABASE_HOST
              valueFrom:
                secretKeyRef:
                  name: kcp-postgresql
                  key: postgresql-serviceName
            - name: APP_DATABASE_PORT
              valueFrom:
                secretKeyRef:
                  name: kcp-postgresql
                  key: postgresql-servicePort
            - name: APP_DATABASE_NAME
              valueFrom:
                secretKeyRef:
                  name: kcp-postgresql
                  key: postgresql-broker-db-name
            - name: APP_DATABASE_SSL
              valueFrom:
                secretKeyRef:
                  name: kcp-postgresql
                  key: postgresql-sslMode
            - name: APP_SERVICE_MANAGER_OVERRIDE_MODE
              value: "{{ .Values.serviceManager.overrideMode }}"
            - name: APP_SERVICE_MANAGER_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.serviceManager.secretName }}
                  key: url
            - name: APP_SERVICE_MANAGER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.serviceManager.secretName }}
                  key: password
            - name: APP_SERVICE_MANAGER_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.serviceManager.secretName }}
                  key: username
            - name: APP_AVS_OAUTH_TOKEN_ENDPOINT
              valueFrom:
                secretKeyRef:
                  key: oauthTokenEndpoint
                  name: {{ .Values.avs.secretName }}
            - name: APP_AVS_OAUTH_USERNAME
              valueFrom:
                secretKeyRef:
                  key: oauthUserName
                  name: {{ .Values.avs.secretName }}
            - name: APP_AVS_OAUTH_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: oauthPassword
                  name: {{ .Values.avs.secretName }}
            - name: APP_AVS_API_ENDPOINT
              valueFrom:
                secretKeyRef:
                  key: apiEndpoint
                  name: {{ .Values.avs.secretName }}
            - name: APP_AVS_OAUTH_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  key: clientId
                  name: {{ .Values.avs.secretName }}
            - name: APP_AVS_API_KEY
              valueFrom:
                secretKeyRef:
                  key: apiKey
                  name: {{ .Values.avs.secretName }}
            - name: APP_AVS_INTERNAL_TESTER_ACCESS_ID
              valueFrom:
                secretKeyRef:
                  key: internalTesterAccessId
                  name: {{ .Values.avs.secretName }}
            - name: APP_AVS_EXTERNAL_TESTER_ACCESS_ID
              valueFrom:
                secretKeyRef:
                  key: externalTesterAccessId
                  name: {{ .Values.avs.secretName }}
            - name: APP_AVS_INTERNAL_TESTER_SERVICE
              valueFrom:
                secretKeyRef:
                  key: internalTesterService
                  name: {{ .Values.avs.secretName }}
            - name: APP_AVS_EXTERNAL_TESTER_SERVICE
              valueFrom:
                secretKeyRef:
                  key: externalTesterService
                  name: {{ .Values.avs.secretName }}
            - name: APP_AVS_INTERNAL_TESTER_TAGS
              valueFrom:
                secretKeyRef:
                  key: internalTesterTags
                  name: {{ .Values.avs.secretName }}
            - name: APP_AVS_EXTERNAL_TESTER_TAGS
              valueFrom:
                secretKeyRef:
                  key: externalTesterTags
                  name: {{ .Values.avs.secretName }}
            - name: APP_AVS_GROUP_ID
              valueFrom:
                secretKeyRef:
                  key: groupId
                  name: {{ .Values.avs.secretName }}
            - name: APP_AVS_PARENT_ID
              valueFrom:
                secretKeyRef:
                  key: parentId
                  name: {{ .Values.avs.secretName }}
            - name: APP_AVS_TRIAL_API_KEY
              valueFrom:
                secretKeyRef:
                  key: trialApiKey
                  name: {{ .Values.avs.secretName }}
            - name: APP_AVS_TRIAL_INTERNAL_TESTER_ACCESS_ID
              valueFrom:
                secretKeyRef:
                  key: trialInternalTesterAccessId
                  name: {{ .Values.avs.secretName }}
            - name: APP_AVS_TRIAL_GROUP_ID
              valueFrom:
                secretKeyRef:
                  key: trialGroupId
                  name: {{ .Values.avs.secretName }}
            - name: APP_AVS_TRIAL_PARENT_ID
              valueFrom:
                secretKeyRef:
                  key: trialParentId
                  name: {{ .Values.avs.secretName }}
            - name: APP_AVS_ADDITIONAL_TAGS_ENABLED
              value: "{{ .Values.avs.additionalTagsEnabled }}"
            - name: APP_AVS_GARDENER_SHOOT_NAME_TAG_CLASS_ID
              value: "{{ .Values.avs.gardenerShootNameTagClassId }}"
            - name: APP_AVS_GARDENER_SEED_NAME_TAG_CLASS_ID
              value: "{{ .Values.avs.gardenerSeedNameTagClassId }}"
            - name: APP_AVS_REGION_TAG_CLASS_ID
              value: "{{ .Values.avs.regionTagClassId }}"
            - name: APP_KYMA_VERSION
              value: {{ .Values.kymaVersion }}
            - name: APP_ENABLE_ON_DEMAND_VERSION
              value: "{{ .Values.kymaVersionOnDemand }}"
            - name: APP_MANAGED_RUNTIME_COMPONENTS_YAML_FILE_PATH
              value: /config/additionalRuntimeComponents.yaml
            - name: APP_TRIAL_REGION_MAPPING_FILE_PATH
              value: /config/trialRegionMapping.yaml
            - name: APP_FREEMIUM_PROVIDERS
              value: "{{ .Values.gardener.freemiumProviders }}"
            - name: APP_CATALOG_FILE_PATH
              value: /config/catalog.yaml
            - name: APP_GARDENER_PROJECT
              value: {{ .Values.gardener.project }}
            - name: APP_GARDENER_SHOOT_DOMAIN
              value: "{{ .Values.gardener.shootDomain }}"
            - name: APP_GARDENER_KUBECONFIG_PATH
              value: {{ .Values.gardener.kubeconfigPath }}
            - name: APP_KUBECONFIG_ISSUER_URL
              value: {{ .Values.kubeconfig.issuerURL }}
            - name: APP_KUBECONFIG_CLIENT_ID
              value: {{ .Values.kubeconfig.clientID }}
            - name: APP_KUBECONFIG_ALLOW_ORIGINS
              value: "{{ .Values.kubeconfig.allowOrigins }}"
            - name: APP_PROVISIONER_KUBERNETES_VERSION
              value: {{ .Values.gardener.kubernetesVersion }}
            - name: APP_PROVISIONER_MACHINE_IMAGE
              value: {{ .Values.gardener.machineImage }}
            - name: APP_PROVISIONER_MACHINE_IMAGE_VERSION
              value: {{ .Values.gardener.machineImageVersion }}
            - name: APP_PROVISIONER_TRIAL_NODES_NUMBER
              value: "{{ .Values.gardener.trialNodesNumber }}"
            - name: APP_DEFAULT_REQUEST_REGION
              value: "{{ .Values.broker.defaultRequestRegion }}"
            - name: APP_UPDATE_PROCESSING_ENABLED
              value: "{{ .Values.osbUpdateProcessingEnabled }}"
            - name: APP_AUDITLOG_ENABLE_SEQ_HTTP
              value: "{{ .Values.global.auditlog.enableSeqHttp }}"
            - name: APP_AUDITLOG_DISABLED
              value: "{{ .Values.global.auditlog.disabled }}"
            - name: APP_AUDITLOG_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.global.auditlog.configMapName }}
                  key: auditlog-url-basic
            - name: APP_AUDITLOG_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.auditlog.secretName }}
                  key: auditlog-user
            - name: APP_AUDITLOG_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.auditlog.secretName }}
                  key: auditlog-password
            - name: APP_AUDITLOG_TENANT
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.global.auditlog.configMapName }}
                  key: auditlog-tenant
            - name: APP_VERSION_CONFIG_NAMESPACE
              value: "{{ .Release.Namespace }}"
            - name: APP_VERSION_CONFIG_NAME
              value: "kyma-versions"
            - name: APP_DOMAIN_NAME
              value: "{{ .Values.global.ingress.domainName }}"
            - name: APP_SKR_OIDC_DEFAULT_VALUES_YAML_FILE_PATH
              value: /config/skrOIDCDefaultValues.yaml
          ports:
            - name: http
              containerPort: {{ .Values.broker.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.broker.statusPort }}
            periodSeconds: 10
            timeoutSeconds: 3
            initialDelaySeconds: 30
          readinessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.broker.statusPort }}
            periodSeconds: 5
            timeoutSeconds: 2
            initialDelaySeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /gardener/kubeconfig
              name: gardener-kubeconfig
              readOnly: true
            - mountPath: /config
              name: config-volume
            - mountPath: /swagger/schema
              name: swagger-volume
            - mountPath: /auditlog-script
              name: auditlog-script
          {{if eq .Values.global.database.embedded.enabled false}}
            - name: cloudsql-instance-credentials
              mountPath: /secrets/cloudsql-instance-credentials
              readOnly: true
          {{ end }}

        {{- if eq .Values.global.database.embedded.enabled false}}
        - name: cloudsql-proxy
          image: {{ .Values.global.images.cloudsql_proxy_image }}
          command: ["/cloud_sql_proxy",
                    "-instances={{ .Values.global.database.managedGCP.instanceConnectionName }}=tcp:5432",
                    "-credential_file=/secrets/cloudsql-instance-credentials/credentials.json"]
          volumeMounts:
            - name: cloudsql-instance-credentials
              mountPath: /secrets/cloudsql-instance-credentials
              readOnly: true
          {{- with .Values.deployment.securityContext }}
          securityContext:
{{ toYaml . | indent 12 }}
          {{- end }}
         {{end}}
      volumes:
      - name: config-volume
        configMap:
          name: {{ include "kyma-env-broker.fullname" . }}
      - name: swagger-volume
        configMap:
          name: {{ include "kyma-env-broker.fullname" . }}-swagger
      {{- if eq .Values.global.database.embedded.enabled false}}
      - name: cloudsql-instance-credentials
        secret:
          secretName: cloudsql-instance-credentials
      {{- end}}
      - name: gardener-kubeconfig
        secret:
          secretName: {{ .Values.gardener.secretName }}
      - name: auditlog-script
        configMap:
          name: {{ .Values.global.auditlog.script.configMapName }}
