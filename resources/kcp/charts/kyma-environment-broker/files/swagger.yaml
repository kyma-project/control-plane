openapi: 3.0.0
info:
  description: The APIs described below can be used to orchestrate runtime's upgrades and to fetch data about orchestrations, operations or runtimes.
  version: '1.0'
  title: Kyma Environment Broker APIs
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
paths:
  /upgrade/kyma:
    post:
      summary: orchestrates kyma upgrade
      operationId: upgradeKyma
      description: Start the processing of Kyma upgrade, returns orchestration ID
      responses:
        '202':
          description: upgrade started
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpgradeResponse'
        '400':
          description: invalid input, object invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errObj'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrchestrationParameters'
        description: Orchestration parameters to configure orchestration

  /orchestrations:
    get:
      summary: returns page of orchestrations
      operationId: listStatusResponses
      description: |
        Using this you can list all of the created orchestrations
      parameters:
        - in: query
          name: page_size
          required: false
          schema:
            type: integer
          description: The page size
        - in: query
          name: page
          required: false
          schema:
            type: integer
          description: Number of the page
      responses:
        '200':
          description: orchestration objects page
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponseList'

  /orchestrations/{orchestration_id}:
    get:
      summary: returns a single orchestration
      operationId: getOrchestration
      description: |
        Fetches orchestration by ID
      parameters:
        - in: path
          name: orchestration_id
          required: true
          schema:
            type: string
          description: The orchestration ID
      responses:
        '200':
          description: orchestration was returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
        '404':
          description: orchestration not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errObj'

  /orchestrations/{orchestration_id}/operations:
    get:
      summary: returns page of operations scheduled by orchestration
      operationId: getOperationsPage
      description: |
        Lists operations scheduled by a given orchestration
      parameters:
        - in: path
          name: orchestration_id
          required: true
          schema:
            type: string
          description: The orchestration ID
        - in: query
          name: page_size
          required: false
          schema:
            type: integer
          description: The page size
        - in: query
          name: page
          required: false
          schema:
            type: integer
          description: Number of the page
      responses:
        '200':
          description: operations were found and returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResponseList'

  /orchestrations/{orchestration_id}/operations/{operation_id}:
    get:
      summary: returns detailed operation scheduled by orchestration
      operationId: getOperationResponse
      description: |
        Fetches the detailed operation with a given ID scheduled by orchestration with a given ID
      parameters:
        - in: path
          name: orchestration_id
          required: true
          schema:
            type: string
          description: The orchestration ID
        - in: path
          name: operation_id
          required: true
          schema:
            type: string
          description: The operation ID
      responses:
        '200':
          description: operation was found and returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationDetailsResponse'
        '404':
          description: operation not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errObj'

  /runtimes:
    get:
      summary: returns page of runtimes
      operationId: listRuntimes
      description: |
        Using this you can list all of the runtimes
      parameters:
        - in: query
          name: page_size
          required: false
          schema:
            type: integer
          description: The page size
        - in: query
          name: page
          required: false
          schema:
            type: integer
          description: Number of the page
        - in: query
          name: account
          required: false
          description: Filter by Global Account ID
          schema:
            type: array
            items:
              type: string
        - in: query
          name: subaccount
          required: false
          description: Filter by Subaccount ID
          schema:
            type: array
            items:
              type: string
        - in: query
          name: instance_id
          required: false
          description: Filter by Instance ID
          schema:
            type: array
            items:
              type: string
        - in: query
          name: runtime_id
          required: false
          description: Filter by runtime ID
          schema:
            type: array
            items:
              type: string
        - in: query
          name: region
          required: false
          description: Filter by provider region
          schema:
            type: array
            items:
              type: string
        - in: query
          name: shoot
          required: false
          description: Filter by shoot name
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: page of runtimes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuntimePage'
        '400':
          description: wrong params
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errObj'

components:
  schemas:
    OrchestrationParameters:
      type: object
      properties:
        strategy:
          type: object
          properties:
            type:
              type: string
              example: parallel
            schedule:
              type: string
              example: immediate
            parallel:
              type: object
              properties:
                workers:
                  type: number
                  example: 1
        dryRun:
          type: boolean
          default: false
        targets:
          type: object
          properties:
            include:
              type: array
              items:
                type: object
                properties:
                  target:
                    type: string
                  globalAccount:
                    type: string
                  subAccount:
                    type: string
                  region:
                    type: string
                  runtimeID:
                    type: string
                  planName:
                    type: string
            exclude:
              type: array
              items:
                type: object
                properties:
                  target:
                    type: string
                  globalAccount:
                    type: string
                  subAccount:
                    type: string
                  region:
                    type: string
                  runtimeID:
                    type: string
                  planName:
                    type: string

    StatusResponse:
      type: object
      properties:
        state:
          type: string
          example: InProgress
        description:
          type: string
          example: Orchestration scheduled
        parameters:
          $ref: '#/components/schemas/OrchestrationParameters'

    StatusResponseList:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/StatusResponse'
        count:
          type: integer
        totalCount:
          type: integer

    OperationResponse:
      type: object
      properties:
        instanceID:
          type: string
          format: uuid
          example: 054ac2c2-318f-45dd-855c-eee41513d40d
        runtimeID:
          type: string
          format: uuid
          example: 054ac2c2-318f-45dd-855c-eee41513d40d
        operationID:
          type: string
          format: uuid
          example: 054ac2c2-318f-45dd-855c-eee41513d40d
        globalAccountID:
          type: string
          format: uuid
          example: 054ac2c2-318f-45dd-855c-eee41513d40d
        subAccountID:
          type: string
          format: uuid
          example: 054ac2c2-318f-45dd-855c-eee41513d40d
        state:
          type: string
          example: InProgress
        description:
          type: string
          example: Operation scheduled
        shootName:
          type: string
        maintenanceWindowBegin:
          type: string
        maintenanceWindowEnd:
          type: string
        dryRun:
          type: boolean
          default: false
        servicePlanID:
          type: string
          format: uuid
        servicePlanName:
          type: string

    OperationDetailsResponse:
      type: object
      properties:
        instanceID:
          type: string
          format: uuid
          example: 054ac2c2-318f-45dd-855c-eee41513d40d
        runtimeID:
          type: string
          format: uuid
          example: 054ac2c2-318f-45dd-855c-eee41513d40d
        operationID:
          type: string
          format: uuid
          example: 054ac2c2-318f-45dd-855c-eee41513d40d
        globalAccountID:
          type: string
          format: uuid
          example: 054ac2c2-318f-45dd-855c-eee41513d40d
        subAccountID:
          type: string
          format: uuid
          example: 054ac2c2-318f-45dd-855c-eee41513d40d
        state:
          type: string
          example: InProgress
        description:
          type: string
          example: Operation scheduled
        shootName:
          type: string
        maintenanceWindowBegin:
          type: string
        maintenanceWindowEnd:
          type: string
        dryRun:
          type: boolean
          default: false
        servicePlanID:
          type: string
          format: uuid
        servicePlanName:
          type: string
        kymaConfig:
          type: string
        clusterConfig:
          type: string

    OperationResponseList:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/OperationResponse'
        count:
          type: integer
        totalCount:
          type: integer

    UpgradeResponse:
      type: object
      properties:
        orchestrationID:
          type: string
          example: 054ac2c2-318f-45dd-855c-eee41513d40d

    RuntimeDTO:
      type: object
      properties:
        instanceID:
          type: string
        runtimeID:
          type: string
          format: uuid
        globalAccountID:
          type: string
          format: uuid
        subaccountID:
          type: string
        subaccountRegion:
          type: string
        shootName:
          type: string
        serviceClassID:
          type: string
          format: uuid
        serviceClassName:
          type: string
        servicePlanID:
          type: string
          format: uuid
        servicePlanName:
          type: string
        status:
          $ref: '#/components/schemas/StatusDTO'

    RuntimePage:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/RuntimeDTO'
        count:
          type: integer
        totalCount:
          type: integer

    StatusDTO:
      type: object
      properties:
        createdAt:
          type: string
          format: timestamp
        modifiedAt:
          type: string
          format: timestamp
        provisioning:
          $ref: '#/components/schemas/OperationStateDTO'
        deprovisioning:
          $ref: '#/components/schemas/OperationStateDTO'
        upgradingKyma:
          $ref: '#/components/schemas/OperationStateDTO'

    OperationStateDTO:
      type: object
      properties:
        state:
          type: string
        description:
          type: string

    errObj:
      type: object
      properties:
        error:
          type: string