nameOverride: ""
fullnameOverride: ""

image:
  # these override the values from global chart
  repository: ""
  tag: ""
  pullSecrets: []
  pullPolicy: Always

resources: {}
  # requests:
  #   memory: "64Mi"
  #   cpu: "50m"
  # limits:
  #   memory: "250Mi"
  #   cpu: "200m"

nodeSelector: {}

securityContext:
  runAsUser: 1001

podAnnotations:
  sidecar.istio.io/inject: "false"

serviceAccount:
  enabled: true
  ## Name of an already existing service account. Setting this value disables the automatic service account creation.
  # name:

gardener:
  secretName: "gardener-credentials"
  namespace: "garden-kyma-dev"

edp:
  namespace: "TBD"
  datastream:
    name: "TBD"
    namespace: "TBD"
    version: 1
    env: "TBD"
  token: "TBD"
  url: "TBD"
  workers: 5
  buffer: 100
  timeout: "30s"
  retry: 5

# Define custom environment variables to pass to kyma-metrics-collector
  # â€” name: ENV_VAR1
  #   value: test1
  # - name: ENV_VAR2
  #   valueFrom:
  #     secretKeyRef:
  #       name: secretname
  #       key: secretkey
extraEnv: []

# Define custom arguments to pass to kyma-metrics-collector container
extraArgs: []

publicCloudInfo:
  configMap:
    key: providers

## kyma-metrics-collector service
service:
  port: 80
  name: http
  protocol: TCP

## kyma-metrics-collector general configurations
config:
  scrapeInterval: 5m
  workerPoolSize: 5
  logLevel: info
  port: 8080
  portName: http

## KEB configurations
keb:
  url: "http://{{ .Values.keb.serviceName }}.{{ .Release.Namespace }}/{{ .Values.keb.runtimesPath }}"
  serviceName: "kcp-kyma-environment-broker"
  timeout: "30s"
  retryCount: "5"
  pollWaitDuration: "10m"
  runtimesPath: "runtimes"

  ## Prometheusrule configurations
prometheus:
  namespace: kyma-system
  labels:
    ## Prometheus expects the following labels in the PrometheusRules to consider it
    app: monitoring
    release: monitoring
  rules:
    enabled: false