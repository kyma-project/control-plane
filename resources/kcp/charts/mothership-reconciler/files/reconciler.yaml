db:
  driver: postgres
  encryption:
    keyFile: "/encryption/reconciler.key"
  blockQueries: false
  postgres:
    host: {{ .Values.db.serviceHost }}
    database: {{ .Values.db.reconcilerDbName }}
    port: {{ .Values.db.servicePort }}
    user: {{ .Values.db.reconcilerUsername }}
    password: {{ .Values.db.reconcilerPassword }}
    sslMode: {{ .Values.db.sslMode }} 
    sslRootCert: {{ .Values.db.sslRootCert }}
    migrationsDir: "./configs/db/postgres"
    maxOpenConns: {{ .Values.db.maxOpenConns }}
    maxIdleConns: {{ .Values.db.maxIdleConns }}
    connMaxLifetime: {{ .Values.db.connMaxLifetime }}
    connMaxIdleTime: {{ .Values.db.connMaxIdleTime }}
  sqlite:
    file: {{ .Values.db.file }}
    deploySchema: {{ .Values.db.deploySchema }}
    resetDatabase: {{ .Values.db.resetDatabase }}
mothership:
  scheme: {{ .Values.service.scheme }}
  host: {{ include "mothership-reconciler.fullname" . }}
  port: {{ .Values.service.port }}
  scheduler:
    deleteStrategy: all
    reconcilers:
{{- range $component := .Values.global.components }}
      {{ $component }}:
        url: http://{{ $component }}-reconciler:8080/v1/run
{{- end }}
{{- if .Values.preComponents }}
    preComponents:
{{ toYaml .Values.preComponents | indent 6 }}
{{- end }}
{{- if .Values.componentCRDs }}
    componentCRDs:
{{ toYaml .Values.componentCRDs | indent 6 }}
{{- else }}
    componentCRDs: {}
{{- end }}
