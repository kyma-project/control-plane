global:
  defaultTenant: 3e64ebae-38b5-46a0-b1ed-9ccee153a0ae
  images:
    cloudsql_proxy_image: "europe-docker.pkg.dev/kyma-project/prod/tpi/cloudsql-docker/gce-proxy:v1.33.8-afb993b8"
    containerRegistry:
      path: europe-docker.pkg.dev/kyma-project/prod
    schema_migrator:
      dir: control-plane/
      version: "v20230120-865831c1"
    subscription_cleanup_job:
      dir:
      version: "v20240129-70857389"
    kyma_metrics_collector:
      dir: control-plane/
      version: v20240227-1a0d3b1b
    tests:
      provisioner:
        dir: control-plane/
        version: "v20240220-6d8e99e0"
      e2e_provisioning:
        dir: control-plane/
        version: "v20240220-6d8e99e0"
    busybox: eu.gcr.io/kyma-project/external/busybox:1.34.1
  isLocalEnv: false
  oauth2:
    host: oauth2
  livenessProbe:
    initialDelaySeconds: 30
    timeoutSeconds: 1
    periodSeconds: 10
  readinessProbe:
    initialDelaySeconds: 5
    timeoutSeconds: 1
    periodSeconds: 2
  components:
    - base
    - cleaner
    - connectivity-proxy
    - eventing
    - warden
  provisioning:
    enabled: false
  kyma_environment_broker:
    enabled: false
    serviceAccountName: "kcp-kyma-environment-broker"
    secrets:
      integrationSystemCredentials:
        name: kcp-kyma-environment-broker-credentials
    environmentsCleanup:
      enabled: false
  provisioner:
    graphql:
      port: 3000
    secrets:
      integrationSystemCredentials:
        name: kcp-provisioner-credentials
  compass:
    registration:
      enabled: true
    tls:
      host: compass-gateway
      secure:
        oauth:
          host: compass-gateway-auth-oauth
    mtls:
      host: compass-gateway-mtls
  istio:
    gateway: "kyma-system/kyma-gateway"
    proxy:
      port: 15020
  database:
    manageSecrets: true
    cloudsqlproxy:
      enabled: false
      workloadIdentity:
        enabled: false
    embedded:
      enabled: true
      provisioner:
        name: "provisioner"
      broker:
        name: "broker"
      reconciler:
        name: "reconciler"
      #TODO remove below after migration to separate user will be done
      provisionerDBName: "provisioner"
      brokerDBName: "broker"
    # Values for GCP managed PostgreSQL database
    managedGCP:
      # secret with a secret key used to encrypt particular data
      encryptionSecretName: "kcp-storage-client-secret"
      serviceAccountKey: ""
      instanceConnectionName: ""
      provisioner:
        name: ""
        user: ""
        password: ""
      broker:
        name: ""
        user: ""
        password: ""
      host: "localhost"
      hostPort: "5432"
      sslMode: ""
      sslRootCert: ""
      #TODO remove below after migration to separate user will be done
      dbUser: ""
      dbPassword: ""
      provisionerDBName: ""
      brokerDBName: ""
  kyma_metrics_collector:
    enabled: false
  mothership_reconciler:
    enabled: false
    expose: true
    authentication: true
    serviceAccountName: "mothership-reconciler"
    roleName: "mothership-reconciler-role"
    roleBindingName: "mothership-reconciler-rolebinding"
    auditlog:
      enabled: true
      logPath: "/var/log/auditlog"
      configMapName: "kcp-auditlog-config"
      secretName: "kcp-auditlog-secret"
      # this will create the predefined configMap and secret with data for test purposes only. Should never be enabled on Production.
      useTestConfig: false
      image: europe-docker.pkg.dev/kyma-project/prod/tpi/fluent-bit
      tag: 2.1.4-52bb9772
      persistence:
        enabled: true
        accessMode: ReadWriteOnce
        size: 2Gi
        storageClass: ""
    features: |-
      - name: "LOG_ISTIO_OPERATOR"
        value: "false"
      - name: "DEBUG_LOGGING_FOR_SPECIFIC_OPERATIONS"
        value: "true"
    # these components will NEVER be reconciled
    skippedComponents: []
  component_reconcilers:
    enabled: false
    authentication: true
pairing-adapter:
  enabled: false
migratorJobs:
  enabled: true
