// Code generated by mockery v2.36.1. DO NOT EDIT.

package mocks

import (
	apperrors "github.com/kyma-project/control-plane/components/provisioner/internal/apperrors"

	mock "github.com/stretchr/testify/mock"

	model "github.com/kyma-project/control-plane/components/provisioner/internal/model"
)

// OperationsStatsGetter is an autogenerated mock type for the OperationsStatsGetter type
type OperationsStatsGetter struct {
	mock.Mock
}

// InProgressOperationsCount provides a mock function with given fields:
func (_m *OperationsStatsGetter) InProgressOperationsCount() (model.OperationsCount, apperrors.AppError) {
	ret := _m.Called()

	var r0 model.OperationsCount
	var r1 apperrors.AppError
	if rf, ok := ret.Get(0).(func() (model.OperationsCount, apperrors.AppError)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() model.OperationsCount); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(model.OperationsCount)
	}

	if rf, ok := ret.Get(1).(func() apperrors.AppError); ok {
		r1 = rf()
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(apperrors.AppError)
		}
	}

	return r0, r1
}

// NewOperationsStatsGetter creates a new instance of OperationsStatsGetter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewOperationsStatsGetter(t interface {
	mock.TestingT
	Cleanup(func())
}) *OperationsStatsGetter {
	mock := &OperationsStatsGetter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
