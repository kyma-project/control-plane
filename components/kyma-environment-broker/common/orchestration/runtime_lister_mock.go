// Code generated by mockery v2.14.0. DO NOT EDIT.

package orchestration

import (
	mock "github.com/stretchr/testify/mock"

	runtime "github.com/kyma-project/control-plane/components/kyma-environment-broker/common/runtime"
)

// RuntimeListerMock is an autogenerated mock type for the RuntimeLister type
type RuntimeListerMock struct {
	mock.Mock
}

// ListAllRuntimes provides a mock function with given fields:
func (_m *RuntimeListerMock) ListAllRuntimes() ([]runtime.RuntimeDTO, error) {
	ret := _m.Called()

	var r0 []runtime.RuntimeDTO
	if rf, ok := ret.Get(0).(func() []runtime.RuntimeDTO); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]runtime.RuntimeDTO)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewRuntimeListerMock interface {
	mock.TestingT
	Cleanup(func())
}

// NewRuntimeListerMock creates a new instance of RuntimeListerMock. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewRuntimeListerMock(t mockConstructorTestingTNewRuntimeListerMock) *RuntimeListerMock {
	mock := &RuntimeListerMock{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
