// Code generated by mockery v2.13.0. DO NOT EDIT.

package automock

import (
	runtimeoverrides "github.com/kyma-project/control-plane/components/kyma-environment-broker/internal/runtimeoverrides"
	mock "github.com/stretchr/testify/mock"
)

// RuntimeOverridesAppender is an autogenerated mock type for the RuntimeOverridesAppender type
type RuntimeOverridesAppender struct {
	mock.Mock
}

// Append provides a mock function with given fields: input, planID, kymaVersion, accountID, subAccountID
func (_m *RuntimeOverridesAppender) Append(input runtimeoverrides.InputAppender, planID string, kymaVersion string, accountID string, subAccountID string) error {
	ret := _m.Called(input, planID, kymaVersion, accountID, subAccountID)

	var r0 error
	if rf, ok := ret.Get(0).(func(runtimeoverrides.InputAppender, string, string, string, string) error); ok {
		r0 = rf(input, planID, kymaVersion, accountID, subAccountID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type NewRuntimeOverridesAppenderT interface {
	mock.TestingT
	Cleanup(func())
}

// NewRuntimeOverridesAppender creates a new instance of RuntimeOverridesAppender. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewRuntimeOverridesAppender(t NewRuntimeOverridesAppenderT) *RuntimeOverridesAppender {
	mock := &RuntimeOverridesAppender{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
