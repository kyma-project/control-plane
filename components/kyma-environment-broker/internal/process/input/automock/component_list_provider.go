// Code generated by mockery v2.14.0. DO NOT EDIT.

package automock

import (
	internal "github.com/kyma-project/control-plane/components/kyma-environment-broker/internal"
	mock "github.com/stretchr/testify/mock"
)

// ComponentListProvider is an autogenerated mock type for the ComponentListProvider type
type ComponentListProvider struct {
	mock.Mock
}

// AllComponents provides a mock function with given fields: kymaVersion, config
func (_m *ComponentListProvider) AllComponents(kymaVersion internal.RuntimeVersionData, config *internal.ConfigForPlan) ([]internal.KymaComponent, error) {
	ret := _m.Called(kymaVersion, config)

	var r0 []internal.KymaComponent
	if rf, ok := ret.Get(0).(func(internal.RuntimeVersionData, *internal.ConfigForPlan) []internal.KymaComponent); ok {
		r0 = rf(kymaVersion, config)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]internal.KymaComponent)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(internal.RuntimeVersionData, *internal.ConfigForPlan) error); ok {
		r1 = rf(kymaVersion, config)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewComponentListProvider interface {
	mock.TestingT
	Cleanup(func())
}

// NewComponentListProvider creates a new instance of ComponentListProvider. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewComponentListProvider(t mockConstructorTestingTNewComponentListProvider) *ComponentListProvider {
	mock := &ComponentListProvider{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
