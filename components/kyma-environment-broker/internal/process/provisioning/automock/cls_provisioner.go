// Code generated by mockery v2.6.0. DO NOT EDIT.

package automock

import (
	cls "github.com/kyma-project/control-plane/components/kyma-environment-broker/internal/cls"
	logrus "github.com/sirupsen/logrus"

	mock "github.com/stretchr/testify/mock"

	servicemanager "github.com/kyma-project/control-plane/components/kyma-environment-broker/internal/servicemanager"
)

// ClsProvisioner is an autogenerated mock type for the ClsProvisioner type
type ClsProvisioner struct {
	mock.Mock
}

// Provision provides a mock function with given fields: smClient, request, log
func (_m *ClsProvisioner) Provision(smClient servicemanager.Client, request *cls.ProvisionRequest, log logrus.FieldLogger) (*cls.ProvisionResult, error) {
	ret := _m.Called(smClient, request, log)

	var r0 *cls.ProvisionResult
	if rf, ok := ret.Get(0).(func(servicemanager.Client, *cls.ProvisionRequest, logrus.FieldLogger) *cls.ProvisionResult); ok {
		r0 = rf(smClient, request, log)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*cls.ProvisionResult)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(servicemanager.Client, *cls.ProvisionRequest, logrus.FieldLogger) error); ok {
		r1 = rf(smClient, request, log)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
