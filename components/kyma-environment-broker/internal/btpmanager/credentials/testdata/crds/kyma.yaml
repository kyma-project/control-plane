apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.2
  labels:
    app.kubernetes.io/created-by: argo-cd
    app.kubernetes.io/instance: kcp-lifecycle-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: lifecycle-manager
    app.kubernetes.io/part-of: kcp-dev
  name: kymas.operator.kyma-project.io
  uid: 57901d64-0c6f-48ad-9b38-dc2bdb11233d
spec:
  group: operator.kyma-project.io
  names:
    kind: Kyma
    listKind: KymaList
    plural: kymas
    singular: kyma
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.state
          name: State
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      deprecated: true
      deprecationWarning: kyma-project.io/v1alpha1 Kyma is deprecated. Use v1beta1 instead.
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Kyma is the Schema for the kymas API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: KymaSpec defines the desired state of Kyma.
              properties:
                channel:
                  description: Channel specifies the desired Channel of the Installation,
                    usually targeting different module versions.
                  maxLength: 32
                  minLength: 3
                  pattern: ^[a-z]+$
                  type: string
                modules:
                  description: Modules specifies the list of modules to be installed
                  items:
                    description: Module defines the components to be installed.
                    properties:
                      channel:
                        description: Channel is the desired channel of the Module. If
                          this changes or is set, it will be used to resolve a new ModuleTemplate
                          based on the new resolved resources.
                        maxLength: 32
                        minLength: 3
                        pattern: ^[a-z]+$
                        type: string
                      controller:
                        description: ControllerName is able to set the controller used
                          for reconciliation of the module. It can be used together
                          with Cache Configuration on the Operator responsible for the
                          templated Modules to split workload.
                        type: string
                      customResourcePolicy:
                        default: CreateAndDelete
                        description: CustomResourcePolicy determines how a ModuleTemplate
                          should be parsed. When CustomResourcePolicy is set to CustomResourcePolicyCreateAndDelete,
                          the Manifest will receive instructions to create it on installation
                          with the default values provided in ModuleTemplate, and to
                          remove it when the module or Kyma is deleted.
                        enum:
                          - CreateAndDelete
                          - Ignore
                        type: string
                      name:
                        description: "Name is a unique identifier of the module. It
                        is used to resolve a ModuleTemplate for creating a set of
                        resources on the cluster. \n Name can be one of 3 kinds: -
                        The ModuleName label value of the module-template, e.g. operator.kyma-project.io/module-name=my-module
                        - The Name or Namespace/Name of a ModuleTemplate, e.g. my-moduletemplate
                        or kyma-system/my-moduletemplate - The FQDN, e.g. kyma-project.io/module/my-module
                        as located in .spec.descriptor.component.name"
                        type: string
                    required:
                      - name
                    type: object
                  type: array
                sync:
                  description: Active Synchronization Settings
                  properties:
                    enabled:
                      default: false
                      description: Enabled set to true will look up a kubeconfig for
                        the remote cluster based on the strategy and synchronize its
                        state there.
                      type: boolean
                    moduleCatalog:
                      default: true
                      description: ModuleCatalog set to true will cause a copy of all
                        ModuleTemplate in the cluster to be synchronized for discovery
                        purposes
                      type: boolean
                    namespace:
                      description: The target namespace, if empty the namespace is reflected
                        from the control plane Note that cleanup is currently not supported
                        if you are switching the namespace, so you will manually need
                        to clean up old synchronized Kymas
                      type: string
                    noModuleCopy:
                      default: true
                      description: NoModuleCopy set to true will cause the remote Kyma
                        to be initialized without copying over the module spec of the
                        control plane into the SKR
                      type: boolean
                    strategy:
                      default: secret
                      description: Strategy determines the way to look up the remotely
                        synced kubeconfig, by default it is fetched from a secret
                      type: string
                  type: object
              required:
                - channel
              type: object
            status:
              description: KymaStatus defines the observed state of Kyma
              properties:
                activeChannel:
                  description: Active Channel
                  type: string
                conditions:
                  description: List of status conditions to indicate the status of a
                    ServiceInstance.
                  items:
                    description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition
                          transitioned from one status to another. This should be when
                          the underlying condition changed.  If that is not known, then
                          using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating
                          details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation
                          that the condition was set based upon. For instance, if .metadata.generation
                          is currently 12, but the .status.conditions[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating
                          the reason for the condition's last transition. Producers
                          of specific condition types may define expected values and
                          meanings for this field, and whether the values are considered
                          a guaranteed API. The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          --- Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be useful
                          (see .node.status.conditions), the ability to deconflict is
                          important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
                lastOperation:
                  properties:
                    lastUpdateTime:
                      format: date-time
                      type: string
                    operation:
                      type: string
                  required:
                    - operation
                  type: object
                modules:
                  description: Contains essential information about the current deployed
                    module
                  items:
                    properties:
                      channel:
                        description: Channel tracks the active Channel of the Module.
                          In Case it changes, the new Channel will have caused a new
                          lookup to be necessary that maybe picks a different ModuleTemplate,
                          which is why we need to reconcile.
                        type: string
                      fqdn:
                        description: FQDN is the fully qualified domain name of the
                          module. In the ModuleTemplate it is located in .spec.descriptor.component.name
                          of the ModuleTemplate FQDN is used to calculate Namespace
                          and Name of the Manifest for tracking.
                        type: string
                      manifest:
                        description: Manifest contains the Information of a related
                          Manifest
                        properties:
                          apiVersion:
                            description: 'APIVersion defines the versioned schema of
                            this representation of an object. Servers should convert
                            recognized schemas to the latest internal value, and may
                            reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                            type: string
                          kind:
                            description: 'Kind is a string value representing the REST
                            resource this object represents. Servers may infer this
                            from the endpoint the client submits requests to. Cannot
                            be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          metadata:
                            description: PartialMeta is a subset of ObjectMeta that
                              contains relevant information to track an Object. see
                              https://github.com/kubernetes/apimachinery/blob/v0.26.1/pkg/apis/meta/v1/types.go#L111
                            properties:
                              generation:
                                description: A sequence number representing a specific
                                  generation of the desired state. Populated by the
                                  system. Read-only.
                                format: int64
                                type: integer
                              name:
                                description: 'Name must be unique within a namespace.
                                Is required when creating resources, although some
                                resources may allow a client to request the generation
                                of an appropriate name automatically. Name is primarily
                                intended for creation idempotence and configuration
                                definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                                type: string
                              namespace:
                                description: "Namespace defines the space within which
                                each name must be unique. An empty namespace is equivalent
                                to the \"default\" namespace, but \"default\" is the
                                canonical representation. Not all objects are required
                                to be scoped to a namespace - the value of this field
                                for those objects will be empty. \n Must be a DNS_LABEL.
                                Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces"
                                type: string
                            type: object
                        type: object
                      name:
                        description: Name defines the name of the Module in the Spec
                          that the status is used for. It can be any kind of Reference
                          format supported by Module.Name.
                        type: string
                      state:
                        description: State of the Module in the currently tracked Generation
                        enum:
                          - Processing
                          - Deleting
                          - Ready
                          - Error
                          - ""
                        type: string
                      template:
                        description: It contains information about the last parsed ModuleTemplate
                          in Context of the Installation. This will update when Channel
                          or the ModuleTemplate is changed.
                        properties:
                          apiVersion:
                            description: 'APIVersion defines the versioned schema of
                            this representation of an object. Servers should convert
                            recognized schemas to the latest internal value, and may
                            reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                            type: string
                          kind:
                            description: 'Kind is a string value representing the REST
                            resource this object represents. Servers may infer this
                            from the endpoint the client submits requests to. Cannot
                            be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          metadata:
                            description: PartialMeta is a subset of ObjectMeta that
                              contains relevant information to track an Object. see
                              https://github.com/kubernetes/apimachinery/blob/v0.26.1/pkg/apis/meta/v1/types.go#L111
                            properties:
                              generation:
                                description: A sequence number representing a specific
                                  generation of the desired state. Populated by the
                                  system. Read-only.
                                format: int64
                                type: integer
                              name:
                                description: 'Name must be unique within a namespace.
                                Is required when creating resources, although some
                                resources may allow a client to request the generation
                                of an appropriate name automatically. Name is primarily
                                intended for creation idempotence and configuration
                                definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                                type: string
                              namespace:
                                description: "Namespace defines the space within which
                                each name must be unique. An empty namespace is equivalent
                                to the \"default\" namespace, but \"default\" is the
                                canonical representation. Not all objects are required
                                to be scoped to a namespace - the value of this field
                                for those objects will be empty. \n Must be a DNS_LABEL.
                                Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces"
                                type: string
                            type: object
                        type: object
                      version:
                        description: Channel tracks the active Version of the Module.
                        type: string
                    required:
                      - fqdn
                      - name
                      - state
                      - version
                    type: object
                  type: array
                state:
                  description: State signifies current state of Kyma. Value can be one
                    of ("Ready", "Processing", "Error", "Deleting").
                  enum:
                    - Processing
                    - Deleting
                    - Ready
                    - Error
                    - ""
                  type: string
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .status.state
          name: State
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: Kyma is the Schema for the kymas API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: KymaSpec defines the desired state of Kyma.
              properties:
                channel:
                  description: Channel specifies the desired Channel of the Installation,
                    usually targeting different module versions.
                  maxLength: 32
                  minLength: 3
                  pattern: ^[a-z]+$
                  type: string
                modules:
                  description: Modules specifies the list of modules to be installed
                  items:
                    description: Module defines the components to be installed.
                    properties:
                      channel:
                        description: Channel is the desired channel of the Module. If
                          this changes or is set, it will be used to resolve a new ModuleTemplate
                          based on the new resolved resources.
                        maxLength: 32
                        minLength: 3
                        pattern: ^[a-z]+$
                        type: string
                      controller:
                        description: ControllerName is able to set the controller used
                          for reconciliation of the module. It can be used together
                          with Cache Configuration on the Operator responsible for the
                          templated Modules to split workload.
                        type: string
                      customResourcePolicy:
                        default: CreateAndDelete
                        description: CustomResourcePolicy determines how a ModuleTemplate
                          should be parsed. When CustomResourcePolicy is set to CustomResourcePolicyCreateAndDelete,
                          the Manifest will receive instructions to create it on installation
                          with the default values provided in ModuleTemplate, and to
                          remove it when the module or Kyma is deleted.
                        enum:
                          - CreateAndDelete
                          - Ignore
                        type: string
                      name:
                        description: "Name is a unique identifier of the module. It
                        is used to resolve a ModuleTemplate for creating a set of
                        resources on the cluster. \n Name can be one of 3 kinds: -
                        The ModuleName label value of the module-template, e.g. operator.kyma-project.io/module-name=my-module
                        - The Name or Namespace/Name of a ModuleTemplate, e.g. my-moduletemplate
                        or kyma-system/my-moduletemplate - The FQDN, e.g. kyma-project.io/module/my-module
                        as located in .spec.descriptor.component.name"
                        type: string
                    required:
                      - name
                    type: object
                  type: array
                sync:
                  description: Active Synchronization Settings
                  properties:
                    enabled:
                      default: false
                      description: Enabled set to true will look up a kubeconfig for
                        the remote cluster based on the strategy and synchronize its
                        state there.
                      type: boolean
                    moduleCatalog:
                      default: true
                      description: ModuleCatalog set to true will cause a copy of all
                        ModuleTemplate in the cluster to be synchronized for discovery
                        purposes
                      type: boolean
                    namespace:
                      description: The target namespace, if empty the namespace is reflected
                        from the control plane Note that cleanup is currently not supported
                        if you are switching the namespace, so you will manually need
                        to clean up old synchronized Kymas
                      type: string
                    noModuleCopy:
                      default: true
                      description: NoModuleCopy set to true will cause the remote Kyma
                        to be initialized without copying over the module spec of the
                        control plane into the SKR
                      type: boolean
                    strategy:
                      default: secret
                      description: Strategy determines the way to look up the remotely
                        synced kubeconfig, by default it is fetched from a secret
                      type: string
                  type: object
              required:
                - channel
              type: object
            status:
              description: KymaStatus defines the observed state of Kyma
              properties:
                activeChannel:
                  description: Active Channel
                  type: string
                conditions:
                  description: List of status conditions to indicate the status of a
                    ServiceInstance.
                  items:
                    description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition
                          transitioned from one status to another. This should be when
                          the underlying condition changed.  If that is not known, then
                          using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating
                          details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation
                          that the condition was set based upon. For instance, if .metadata.generation
                          is currently 12, but the .status.conditions[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating
                          the reason for the condition's last transition. Producers
                          of specific condition types may define expected values and
                          meanings for this field, and whether the values are considered
                          a guaranteed API. The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          --- Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be useful
                          (see .node.status.conditions), the ability to deconflict is
                          important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
                lastOperation:
                  properties:
                    lastUpdateTime:
                      format: date-time
                      type: string
                    operation:
                      type: string
                  required:
                    - operation
                  type: object
                modules:
                  description: Contains essential information about the current deployed
                    module
                  items:
                    properties:
                      channel:
                        description: Channel tracks the active Channel of the Module.
                          In Case it changes, the new Channel will have caused a new
                          lookup to be necessary that maybe picks a different ModuleTemplate,
                          which is why we need to reconcile.
                        type: string
                      fqdn:
                        description: FQDN is the fully qualified domain name of the
                          module. In the ModuleTemplate it is located in .spec.descriptor.component.name
                          of the ModuleTemplate FQDN is used to calculate Namespace
                          and Name of the Manifest for tracking.
                        type: string
                      manifest:
                        description: Manifest contains the Information of a related
                          Manifest
                        properties:
                          apiVersion:
                            description: 'APIVersion defines the versioned schema of
                            this representation of an object. Servers should convert
                            recognized schemas to the latest internal value, and may
                            reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                            type: string
                          kind:
                            description: 'Kind is a string value representing the REST
                            resource this object represents. Servers may infer this
                            from the endpoint the client submits requests to. Cannot
                            be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          metadata:
                            description: PartialMeta is a subset of ObjectMeta that
                              contains relevant information to track an Object. see
                              https://github.com/kubernetes/apimachinery/blob/v0.26.1/pkg/apis/meta/v1/types.go#L111
                            properties:
                              generation:
                                description: A sequence number representing a specific
                                  generation of the desired state. Populated by the
                                  system. Read-only.
                                format: int64
                                type: integer
                              name:
                                description: 'Name must be unique within a namespace.
                                Is required when creating resources, although some
                                resources may allow a client to request the generation
                                of an appropriate name automatically. Name is primarily
                                intended for creation idempotence and configuration
                                definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                                type: string
                              namespace:
                                description: "Namespace defines the space within which
                                each name must be unique. An empty namespace is equivalent
                                to the \"default\" namespace, but \"default\" is the
                                canonical representation. Not all objects are required
                                to be scoped to a namespace - the value of this field
                                for those objects will be empty. \n Must be a DNS_LABEL.
                                Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces"
                                type: string
                            type: object
                        type: object
                      name:
                        description: Name defines the name of the Module in the Spec
                          that the status is used for. It can be any kind of Reference
                          format supported by Module.Name.
                        type: string
                      state:
                        description: State of the Module in the currently tracked Generation
                        enum:
                          - Processing
                          - Deleting
                          - Ready
                          - Error
                          - ""
                        type: string
                      template:
                        description: It contains information about the last parsed ModuleTemplate
                          in Context of the Installation. This will update when Channel
                          or the ModuleTemplate is changed.
                        properties:
                          apiVersion:
                            description: 'APIVersion defines the versioned schema of
                            this representation of an object. Servers should convert
                            recognized schemas to the latest internal value, and may
                            reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                            type: string
                          kind:
                            description: 'Kind is a string value representing the REST
                            resource this object represents. Servers may infer this
                            from the endpoint the client submits requests to. Cannot
                            be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          metadata:
                            description: PartialMeta is a subset of ObjectMeta that
                              contains relevant information to track an Object. see
                              https://github.com/kubernetes/apimachinery/blob/v0.26.1/pkg/apis/meta/v1/types.go#L111
                            properties:
                              generation:
                                description: A sequence number representing a specific
                                  generation of the desired state. Populated by the
                                  system. Read-only.
                                format: int64
                                type: integer
                              name:
                                description: 'Name must be unique within a namespace.
                                Is required when creating resources, although some
                                resources may allow a client to request the generation
                                of an appropriate name automatically. Name is primarily
                                intended for creation idempotence and configuration
                                definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                                type: string
                              namespace:
                                description: "Namespace defines the space within which
                                each name must be unique. An empty namespace is equivalent
                                to the \"default\" namespace, but \"default\" is the
                                canonical representation. Not all objects are required
                                to be scoped to a namespace - the value of this field
                                for those objects will be empty. \n Must be a DNS_LABEL.
                                Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces"
                                type: string
                            type: object
                        type: object
                      version:
                        description: Channel tracks the active Version of the Module.
                        type: string
                    required:
                      - fqdn
                      - name
                      - state
                      - version
                    type: object
                  type: array
                state:
                  description: State signifies current state of Kyma. Value can be one
                    of ("Ready", "Processing", "Error", "Deleting").
                  enum:
                    - Processing
                    - Deleting
                    - Ready
                    - Error
                    - ""
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: Kyma
    listKind: KymaList
    plural: kymas
    singular: kyma
  conditions:
    - lastTransitionTime: "2022-08-30T12:33:16Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2022-08-30T12:33:16Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
  storedVersions:
    - v1alpha1
    - v1beta1
