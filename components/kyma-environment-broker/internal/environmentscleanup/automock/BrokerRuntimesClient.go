// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import (
	runtime "github.com/kyma-project/control-plane/components/kyma-environment-broker/common/runtime"
	mock "github.com/stretchr/testify/mock"
)

// BrokerRuntimesClient is an autogenerated mock type for the BrokerRuntimesClient type
type BrokerRuntimesClient struct {
	mock.Mock
}

// ListRuntimes provides a mock function with given fields: params
func (_m *BrokerRuntimesClient) ListRuntimes(params runtime.ListParameters) (runtime.RuntimesPage, error) {
	ret := _m.Called(params)

	var r0 runtime.RuntimesPage
	if rf, ok := ret.Get(0).(func(runtime.ListParameters) runtime.RuntimesPage); ok {
		r0 = rf(params)
	} else {
		r0 = ret.Get(0).(runtime.RuntimesPage)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(runtime.ListParameters) error); ok {
		r1 = rf(params)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewBrokerRuntimesClient interface {
	mock.TestingT
	Cleanup(func())
}

// NewBrokerRuntimesClient creates a new instance of BrokerRuntimesClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewBrokerRuntimesClient(t mockConstructorTestingTNewBrokerRuntimesClient) *BrokerRuntimesClient {
	mock := &BrokerRuntimesClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
