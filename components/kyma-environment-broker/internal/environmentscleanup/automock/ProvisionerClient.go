// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// ProvisionerClient is an autogenerated mock type for the ProvisionerClient type
type ProvisionerClient struct {
	mock.Mock
}

// DeprovisionRuntime provides a mock function with given fields: accountID, runtimeID
func (_m *ProvisionerClient) DeprovisionRuntime(accountID string, runtimeID string) (string, error) {
	ret := _m.Called(accountID, runtimeID)

	var r0 string
	if rf, ok := ret.Get(0).(func(string, string) string); ok {
		r0 = rf(accountID, runtimeID)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string) error); ok {
		r1 = rf(accountID, runtimeID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewProvisionerClient interface {
	mock.TestingT
	Cleanup(func())
}

// NewProvisionerClient creates a new instance of ProvisionerClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewProvisionerClient(t mockConstructorTestingTNewProvisionerClient) *ProvisionerClient {
	mock := &ProvisionerClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
