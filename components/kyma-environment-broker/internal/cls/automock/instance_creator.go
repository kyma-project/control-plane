// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package automock

import (
	internal "github.com/kyma-project/control-plane/components/kyma-environment-broker/internal"
	cls "github.com/kyma-project/control-plane/components/kyma-environment-broker/internal/cls"

	mock "github.com/stretchr/testify/mock"

	process "github.com/kyma-project/control-plane/components/kyma-environment-broker/internal/process"

	servicemanager "github.com/kyma-project/control-plane/components/kyma-environment-broker/internal/servicemanager"
)

// InstanceCreator is an autogenerated mock type for the InstanceCreator type
type InstanceCreator struct {
	mock.Mock
}

// CreateInstance provides a mock function with given fields: om, smCli, op, input
func (_m *InstanceCreator) CreateInstance(om *process.ProvisionOperationManager, smCli servicemanager.Client, op internal.ProvisioningOperation, input cls.CreateInstanceInput) (internal.ProvisioningOperation, error) {
	ret := _m.Called(om, smCli, op, input)

	var r0 internal.ProvisioningOperation
	if rf, ok := ret.Get(0).(func(*process.ProvisionOperationManager, servicemanager.Client, internal.ProvisioningOperation, cls.CreateInstanceInput) internal.ProvisioningOperation); ok {
		r0 = rf(om, smCli, op, input)
	} else {
		r0 = ret.Get(0).(internal.ProvisioningOperation)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*process.ProvisionOperationManager, servicemanager.Client, internal.ProvisioningOperation, cls.CreateInstanceInput) error); ok {
		r1 = rf(om, smCli, op, input)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
